[
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/29",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/29/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/29/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/29/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/29",
    "id": 15564402,
    "number": 29,
    "title": "Allow protocol discovery between client and server.",
    "user": {
      "login": "timemachine3030",
      "id": 338063,
      "avatar_url": "https://secure.gravatar.com/avatar/65e75b2b2168825e297074219b8830d1?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "65e75b2b2168825e297074219b8830d1",
      "url": "https://api.github.com/users/timemachine3030",
      "html_url": "https://github.com/timemachine3030",
      "followers_url": "https://api.github.com/users/timemachine3030/followers",
      "following_url": "https://api.github.com/users/timemachine3030/following{/other_user}",
      "gists_url": "https://api.github.com/users/timemachine3030/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timemachine3030/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timemachine3030/subscriptions",
      "organizations_url": "https://api.github.com/users/timemachine3030/orgs",
      "repos_url": "https://api.github.com/users/timemachine3030/repos",
      "events_url": "https://api.github.com/users/timemachine3030/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timemachine3030/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-06-14T15:42:34Z",
    "updated_at": "2013-06-14T15:42:34Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "If writing an application that is able to upload to many different servers, the application will need to check if the remote server supports this protocol. Therefore, I suggest the following protocol extension to start a conversion on the topic.\r\n\r\n(Note: that servers that do not support the tus protocol will reply to `HEAD` requests with either `200 OK` or `404 Not Found`)\r\n\r\n### Protocol Discovery\r\n\r\nAll implementations SHOULD include the protocol discovery API to allow clients to negotiate, with a server, a common supported version of this protocol.\r\n\r\nWhen making a `HEAD` request for a new file the client MAY include a `TUS-Resumable` header with the version of this protocol. \r\n\r\nWhen receiving a `HEAD` request with the `TUS-Resumable` header the server MAY reply with the `202 Accepted` status and the current `Offset`.\r\n\r\n#### Example\r\n\r\n**Request:**\r\n\r\n```\r\nHEAD /files/24e533e02ec3bc40c387f1a0e460e216 HTTP/1.1\r\nHost: tus.example.org\r\nTUS-Resumable: 1.0\r\n```\r\n\r\n**Response:**\r\n\r\n```\r\nHTTP/1.1 202 Accepted\r\nOffset: 0\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/28",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/28/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/28/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/28/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/28",
    "id": 14497810,
    "number": 28,
    "title": "Standardize support for streaming uploads",
    "user": {
      "login": "Jonhoo",
      "id": 176295,
      "avatar_url": "https://secure.gravatar.com/avatar/d4646d0d4f5f724283f4ae05d2792845?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "d4646d0d4f5f724283f4ae05d2792845",
      "url": "https://api.github.com/users/Jonhoo",
      "html_url": "https://github.com/Jonhoo",
      "followers_url": "https://api.github.com/users/Jonhoo/followers",
      "following_url": "https://api.github.com/users/Jonhoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jonhoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jonhoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jonhoo/subscriptions",
      "organizations_url": "https://api.github.com/users/Jonhoo/orgs",
      "repos_url": "https://api.github.com/users/Jonhoo/repos",
      "events_url": "https://api.github.com/users/Jonhoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jonhoo/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 28,
    "created_at": "2013-05-19T15:45:17Z",
    "updated_at": "2013-06-11T20:20:47Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "As @felixge pointed out in #26, it would be good to have a standardized way of providing URL endpoints where a client can retrieve a file that is currently being uploaded that will stay open until the entire file has been sent.\r\n\r\nFollowing the decision in #26 to replace `Offset` with `Content-Length`, clients will by default be getting only the bytes that have been uploaded at the time of the request. A conforming client might be able to detect the `Entity-Length` header and keep the connection open to stream more bytes, but it would be good to define the protocol in such a way that \"normal\" HTTP clients would be able to request a file being uploaded and receive the entire file too.\r\n\r\nOne way of achieving this might be to change the default behavior of HEAD and GET requests to by default serve `Content-Length = Entity-Length` and stream the file to the client, but add a request flag a client to send if they wish to only get the uploaded bytes and not wait for the rest. Something like `Accept: incomplete`, except with a more appropriate header field (`Accept` is only for content types)."
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/26",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/26/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/26/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/26/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/26",
    "id": 14358917,
    "number": 26,
    "title": "Response to HEAD should use Content-Length, not Offset",
    "user": {
      "login": "Jonhoo",
      "id": 176295,
      "avatar_url": "https://secure.gravatar.com/avatar/d4646d0d4f5f724283f4ae05d2792845?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "d4646d0d4f5f724283f4ae05d2792845",
      "url": "https://api.github.com/users/Jonhoo",
      "html_url": "https://github.com/Jonhoo",
      "followers_url": "https://api.github.com/users/Jonhoo/followers",
      "following_url": "https://api.github.com/users/Jonhoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jonhoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jonhoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jonhoo/subscriptions",
      "organizations_url": "https://api.github.com/users/Jonhoo/orgs",
      "repos_url": "https://api.github.com/users/Jonhoo/repos",
      "events_url": "https://api.github.com/users/Jonhoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jonhoo/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 12,
    "created_at": "2013-05-15T13:42:28Z",
    "updated_at": "2013-05-19T15:45:17Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "The protocol dictates that the response to a HEAD request on an incomplete upload should reply with an Offset header indicating how much data the server already has. Wouldn't it make more sense to use the Content-Length header here, as we are really telling the client how much data is already stored on the server?"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/25",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/25/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/25/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/25/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/25",
    "id": 14357583,
    "number": 25,
    "title": "The protocol SHOULD describe retry for clients :)",
    "user": {
      "login": "kvz",
      "id": 26752,
      "avatar_url": "https://secure.gravatar.com/avatar/3210e1be3e4059b93c4a88309e2183a2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "3210e1be3e4059b93c4a88309e2183a2",
      "url": "https://api.github.com/users/kvz",
      "html_url": "https://github.com/kvz",
      "followers_url": "https://api.github.com/users/kvz/followers",
      "following_url": "https://api.github.com/users/kvz/following{/other_user}",
      "gists_url": "https://api.github.com/users/kvz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kvz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kvz/subscriptions",
      "organizations_url": "https://api.github.com/users/kvz/orgs",
      "repos_url": "https://api.github.com/users/kvz/repos",
      "events_url": "https://api.github.com/users/kvz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kvz/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-05-15T13:11:02Z",
    "updated_at": "2013-05-17T08:51:39Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "I think it would be useful if the protocol describes how clients should automatically retry a few times during XX seconds. If this behavior is implemented consistently across all clients, it's becomes easy for people who run tus servers to do failovers or spread load, without end-users even noticing anything except for maybe a few seconds delay added to their upload.\r\n\r\nI guess you could consider this the responsibility of the implementer, but if you can assume all clients handle this gracefully, it makes architecting server-side infrastructure much simpler."
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/24",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/24/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/24/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/24/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/24",
    "id": 14357146,
    "number": 24,
    "title": "Describe large file chunking as a part of protocol",
    "user": {
      "login": "wronglink",
      "id": 668115,
      "avatar_url": "https://secure.gravatar.com/avatar/b1a1806ebdfb707cff1ae0c27d099d3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "b1a1806ebdfb707cff1ae0c27d099d3d",
      "url": "https://api.github.com/users/wronglink",
      "html_url": "https://github.com/wronglink",
      "followers_url": "https://api.github.com/users/wronglink/followers",
      "following_url": "https://api.github.com/users/wronglink/following{/other_user}",
      "gists_url": "https://api.github.com/users/wronglink/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wronglink/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wronglink/subscriptions",
      "organizations_url": "https://api.github.com/users/wronglink/orgs",
      "repos_url": "https://api.github.com/users/wronglink/repos",
      "events_url": "https://api.github.com/users/wronglink/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wronglink/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 8,
    "created_at": "2013-05-15T13:00:36Z",
    "updated_at": "2013-05-22T05:09:41Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Many frameworks and webservers have predefined request maximum size. Hanlding a huge file upload in one request is not trivial task. The current version of protocol says:\r\n\r\n> Clients SHOULD send all remaining bytes of a resource in a single PATCH request, but MAY also use multiple small requests for scenarios where this is desirable (e.g. NGINX buffering requests before they reach their backend).\r\n\r\nBut how can client know what is the maximum size of 1 chunk? In most cases if client tries to send too big request the server would return a 413 error or something like this and client would not know what to do now.\r\n\r\nI think that an additional header (lets say `Max-Content-Length`) that server returns on initial POST and HEAD requests can help us with that.\r\n\r\nI haven't found any existing headers for such task so I suggest to use a custom one. Here is a small example (we want to send 50 mb file):\r\n\r\n**Request:**\r\n\r\n```\r\nPOST /files HTTP/1.1\r\nHost: tus.example.org\r\nContent-Length: 0\r\nFinal-Length: 52428800\r\n```\r\n\r\n**Response:**\r\n\r\n```\r\nHTTP/1.1 201 Created\r\nMax-Content-Length: 10485760\r\nLocation: http://tus.example.org/files/24e533e02ec3bc40c387f1a0e460e216\r\n```\r\n\r\nOk. Now client knows that only 10 mb per request is allowed. Than it sends chunks. If something went wrong - make `HEAD` request, detect the offset and continue."
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/18",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/18/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/18/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/18/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/18",
    "id": 13396420,
    "number": 18,
    "title": "Ressource allocation/timeout",
    "user": {
      "login": "radiospiel",
      "id": 29153,
      "avatar_url": "https://secure.gravatar.com/avatar/d61e824b2c253ba713e7284b79b812d3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "d61e824b2c253ba713e7284b79b812d3",
      "url": "https://api.github.com/users/radiospiel",
      "html_url": "https://github.com/radiospiel",
      "followers_url": "https://api.github.com/users/radiospiel/followers",
      "following_url": "https://api.github.com/users/radiospiel/following{/other_user}",
      "gists_url": "https://api.github.com/users/radiospiel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/radiospiel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/radiospiel/subscriptions",
      "organizations_url": "https://api.github.com/users/radiospiel/orgs",
      "repos_url": "https://api.github.com/users/radiospiel/repos",
      "events_url": "https://api.github.com/users/radiospiel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/radiospiel/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-04-19T11:01:32Z",
    "updated_at": "2013-04-19T12:02:38Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Once the client requests an upload via POST (or should we call that an upload session) the server should reserve enough resources to deal with the announced size of the upload. However, to prevent super simple DOSing the server should implement a timeout mechanism to clean up stale upload sessions.\r\n\r\nI don't know if we need to specify the timeout mechanism, as there are probably a number of different algorithms that make sense here; however, the server should have some way to inform the client that his upload session is not valid anymore due to a timeout.  "
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/17",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/17/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/17/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/17/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/17",
    "id": 13354855,
    "number": 17,
    "title": "202 Accepted Response? ",
    "user": {
      "login": "aranw",
      "id": 241565,
      "avatar_url": "https://secure.gravatar.com/avatar/5497b96ecaebaf21d85670b332a4da78?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "5497b96ecaebaf21d85670b332a4da78",
      "url": "https://api.github.com/users/aranw",
      "html_url": "https://github.com/aranw",
      "followers_url": "https://api.github.com/users/aranw/followers",
      "following_url": "https://api.github.com/users/aranw/following{/other_user}",
      "gists_url": "https://api.github.com/users/aranw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aranw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aranw/subscriptions",
      "organizations_url": "https://api.github.com/users/aranw/orgs",
      "repos_url": "https://api.github.com/users/aranw/repos",
      "events_url": "https://api.github.com/users/aranw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aranw/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-18T15:25:27Z",
    "updated_at": "2013-04-18T20:10:58Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Could a 202 Accepted Response be good for use under heavy usage/throttling uploads? \r\n\r\nReference\r\nhttp://tools.ietf.org/html/rfc2616#section-10.2.3\r\nhttp://mathieu.fenniak.net/the-api-checklist/ number 4 in the list, there also may be some other related things in this post"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/16",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/16/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/16/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/16/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/16",
    "id": 13338963,
    "number": 16,
    "title": "Support streams with unknown length?",
    "user": {
      "login": "felixge",
      "id": 15000,
      "avatar_url": "https://secure.gravatar.com/avatar/23968f0ca75b13463d2db5343e5c2096?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "23968f0ca75b13463d2db5343e5c2096",
      "url": "https://api.github.com/users/felixge",
      "html_url": "https://github.com/felixge",
      "followers_url": "https://api.github.com/users/felixge/followers",
      "following_url": "https://api.github.com/users/felixge/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixge/subscriptions",
      "organizations_url": "https://api.github.com/users/felixge/orgs",
      "repos_url": "https://api.github.com/users/felixge/repos",
      "events_url": "https://api.github.com/users/felixge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixge/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2013-04-18T08:31:38Z",
    "updated_at": "2013-04-26T08:52:33Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "see discussion here: http://www.tus.io/protocols/resumable-upload.html#comment-865108402"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/14",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/14/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/14/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/14/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/14",
    "id": 13321201,
    "number": 14,
    "title": "PATCH vs PUT",
    "user": {
      "login": "felixge",
      "id": 15000,
      "avatar_url": "https://secure.gravatar.com/avatar/23968f0ca75b13463d2db5343e5c2096?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "23968f0ca75b13463d2db5343e5c2096",
      "url": "https://api.github.com/users/felixge",
      "html_url": "https://github.com/felixge",
      "followers_url": "https://api.github.com/users/felixge/followers",
      "following_url": "https://api.github.com/users/felixge/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixge/subscriptions",
      "organizations_url": "https://api.github.com/users/felixge/orgs",
      "repos_url": "https://api.github.com/users/felixge/repos",
      "events_url": "https://api.github.com/users/felixge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixge/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/bug",
        "name": "bug",
        "color": "fc2929"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 25,
    "created_at": "2013-04-17T21:38:49Z",
    "updated_at": "2013-05-22T20:36:16Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "As pointed out by @Baughn in IRC, PATCH (partial entity update) seems more appropriate than PUT (replacing an entire entity) for resuming uploads. But it might cause issues with mobile http proxies as PATCH is somewhat exotic. Needs investigation."
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/13",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/13/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/13/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/13/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/13",
    "id": 13299690,
    "number": 13,
    "title": "Define behavior for GET on incomplete uploads",
    "user": {
      "login": "brunodecarvalho",
      "id": 337352,
      "avatar_url": "https://secure.gravatar.com/avatar/f54c7be892503a423462d0906f454f87?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "f54c7be892503a423462d0906f454f87",
      "url": "https://api.github.com/users/brunodecarvalho",
      "html_url": "https://github.com/brunodecarvalho",
      "followers_url": "https://api.github.com/users/brunodecarvalho/followers",
      "following_url": "https://api.github.com/users/brunodecarvalho/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunodecarvalho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunodecarvalho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunodecarvalho/subscriptions",
      "organizations_url": "https://api.github.com/users/brunodecarvalho/orgs",
      "repos_url": "https://api.github.com/users/brunodecarvalho/repos",
      "events_url": "https://api.github.com/users/brunodecarvalho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunodecarvalho/received_events",
      "type": "User"
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 15,
    "created_at": "2013-04-17T14:51:30Z",
    "updated_at": "2013-05-04T12:04:26Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Edge case. Don't really have a strong opinion on whether it should simply return **404 Not Found** or give some sort of indication that an upload is under way, like **416 Requested Range Not Satisfiable**. For the latter, the RFC says servers \"SHOULD\" respond with 416 if a *Range* header was sent in the request but it doesn't say anything about it not being allowed or recommended otherwise.\r\n\r\nProbably best to just leave a small note on the protocol draft stating that default behavior is to report 404 until the upload has been completed but server implementations are free to roll in their own behavior as they deem fit."
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/12",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/12/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/12/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/12/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/12",
    "id": 13293714,
    "number": 12,
    "title": "Consider using 204 No Content",
    "user": {
      "login": "felixge",
      "id": 15000,
      "avatar_url": "https://secure.gravatar.com/avatar/23968f0ca75b13463d2db5343e5c2096?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "23968f0ca75b13463d2db5343e5c2096",
      "url": "https://api.github.com/users/felixge",
      "html_url": "https://github.com/felixge",
      "followers_url": "https://api.github.com/users/felixge/followers",
      "following_url": "https://api.github.com/users/felixge/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixge/subscriptions",
      "organizations_url": "https://api.github.com/users/felixge/orgs",
      "repos_url": "https://api.github.com/users/felixge/repos",
      "events_url": "https://api.github.com/users/felixge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixge/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/bug",
        "name": "bug",
        "color": "fc2929"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-04-17T12:34:12Z",
    "updated_at": "2013-04-19T05:23:57Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "See: https://news.ycombinator.com/reply?id=5564024&whence=item%3fid%3d5563569"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/11",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/11/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/11/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/11/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/11",
    "id": 13291168,
    "number": 11,
    "title": "Clarify that url does not have to be fixed",
    "user": {
      "login": "felixge",
      "id": 15000,
      "avatar_url": "https://secure.gravatar.com/avatar/23968f0ca75b13463d2db5343e5c2096?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "23968f0ca75b13463d2db5343e5c2096",
      "url": "https://api.github.com/users/felixge",
      "html_url": "https://github.com/felixge",
      "followers_url": "https://api.github.com/users/felixge/followers",
      "following_url": "https://api.github.com/users/felixge/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixge/subscriptions",
      "organizations_url": "https://api.github.com/users/felixge/orgs",
      "repos_url": "https://api.github.com/users/felixge/repos",
      "events_url": "https://api.github.com/users/felixge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixge/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-17T11:13:27Z",
    "updated_at": "2013-04-17T11:13:27Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "see https://news.ycombinator.com/reply?id=5563688&whence=item%3fid%3d5563569"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/10",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/10/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/10/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/10/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/10",
    "id": 13288911,
    "number": 10,
    "title": "Mention authentication in protocol",
    "user": {
      "login": "felixge",
      "id": 15000,
      "avatar_url": "https://secure.gravatar.com/avatar/23968f0ca75b13463d2db5343e5c2096?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "23968f0ca75b13463d2db5343e5c2096",
      "url": "https://api.github.com/users/felixge",
      "html_url": "https://github.com/felixge",
      "followers_url": "https://api.github.com/users/felixge/followers",
      "following_url": "https://api.github.com/users/felixge/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixge/subscriptions",
      "organizations_url": "https://api.github.com/users/felixge/orgs",
      "repos_url": "https://api.github.com/users/felixge/repos",
      "events_url": "https://api.github.com/users/felixge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixge/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-17T10:00:35Z",
    "updated_at": "2013-04-17T10:00:35Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Basically clarifying that the usual suspects can be used (basic auth, cookies, etc)."
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/9",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/9/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/9/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/9/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/9",
    "id": 13288552,
    "number": 9,
    "title": "100-Continue Research",
    "user": {
      "login": "felixge",
      "id": 15000,
      "avatar_url": "https://secure.gravatar.com/avatar/23968f0ca75b13463d2db5343e5c2096?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "23968f0ca75b13463d2db5343e5c2096",
      "url": "https://api.github.com/users/felixge",
      "html_url": "https://github.com/felixge",
      "followers_url": "https://api.github.com/users/felixge/followers",
      "following_url": "https://api.github.com/users/felixge/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixge/subscriptions",
      "organizations_url": "https://api.github.com/users/felixge/orgs",
      "repos_url": "https://api.github.com/users/felixge/repos",
      "events_url": "https://api.github.com/users/felixge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixge/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 7,
    "created_at": "2013-04-17T09:51:01Z",
    "updated_at": "2013-04-18T11:55:30Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Figure out if we need to support / require https' 100-Continue feature."
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/7",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/7/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/7/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/7/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/7",
    "id": 13243171,
    "number": 7,
    "title": "Checksum Support (MD5,CRC32,SHA1,etc.)",
    "user": {
      "login": "sandfox",
      "id": 260919,
      "avatar_url": "https://secure.gravatar.com/avatar/5c638f6b8e6c046f28378aadc9a46c24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "5c638f6b8e6c046f28378aadc9a46c24",
      "url": "https://api.github.com/users/sandfox",
      "html_url": "https://github.com/sandfox",
      "followers_url": "https://api.github.com/users/sandfox/followers",
      "following_url": "https://api.github.com/users/sandfox/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandfox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandfox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandfox/subscriptions",
      "organizations_url": "https://api.github.com/users/sandfox/orgs",
      "repos_url": "https://api.github.com/users/sandfox/repos",
      "events_url": "https://api.github.com/users/sandfox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandfox/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 27,
    "created_at": "2013-04-16T12:17:44Z",
    "updated_at": "2013-04-19T10:51:28Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "Just a vague idea I'm throwing out here:\r\n\r\nShould there be some mechanism for verifying the upload contents somewhere in the process? e.g supplying a md5 hash of the file when responding to a `HEAD` request?\r\nOr is this outside the scope of the protocol and something that should left as option for implementations to handle if they want to?"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/6",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/6/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/6/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/6/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/6",
    "id": 13234127,
    "number": 6,
    "title": "make example urls in protocol work",
    "user": {
      "login": "felixge",
      "id": 15000,
      "avatar_url": "https://secure.gravatar.com/avatar/23968f0ca75b13463d2db5343e5c2096?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "23968f0ca75b13463d2db5343e5c2096",
      "url": "https://api.github.com/users/felixge",
      "html_url": "https://github.com/felixge",
      "followers_url": "https://api.github.com/users/felixge/followers",
      "following_url": "https://api.github.com/users/felixge/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixge/subscriptions",
      "organizations_url": "https://api.github.com/users/felixge/orgs",
      "repos_url": "https://api.github.com/users/felixge/repos",
      "events_url": "https://api.github.com/users/felixge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixge/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-16T07:17:49Z",
    "updated_at": "2013-04-16T08:00:50Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "we host a tusd version anyway, why not make life easier for early protocol implementors by making the example requests executable"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/3",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/3/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/3/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/3",
    "id": 13203935,
    "number": 3,
    "title": "Define behaviour when uploading non-contiguous chunks ",
    "user": {
      "login": "sandfox",
      "id": 260919,
      "avatar_url": "https://secure.gravatar.com/avatar/5c638f6b8e6c046f28378aadc9a46c24?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "5c638f6b8e6c046f28378aadc9a46c24",
      "url": "https://api.github.com/users/sandfox",
      "html_url": "https://github.com/sandfox",
      "followers_url": "https://api.github.com/users/sandfox/followers",
      "following_url": "https://api.github.com/users/sandfox/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandfox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandfox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandfox/subscriptions",
      "organizations_url": "https://api.github.com/users/sandfox/orgs",
      "repos_url": "https://api.github.com/users/sandfox/repos",
      "events_url": "https://api.github.com/users/sandfox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandfox/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-04-15T15:03:32Z",
    "updated_at": "2013-04-18T08:13:37Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "As per IRC convo:\r\n\r\nShould the server accept uploading of non-contiguous chunks?\r\nFor example client uploads ranges [0-100], then [240-360] then [400-420]. Do we accept this happily or throw toys out of the pram?\r\n\r\n\r\nIf acceptable behaviour, how should results of such be displayed when making a `HEAD` request?\r\n\r\nwith contiguous blocks `Range: bytes=0-100`\r\nwith non-contigous blocks `Range: bytes=0-100,240-360,400-420` ?? _no idea if this is sane or not_"
  },
  {
    "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/2",
    "labels_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/2/comments",
    "events_url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/issues/2/events",
    "html_url": "https://github.com/tus/tus-resumable-upload-protocol/issues/2",
    "id": 13202658,
    "number": 2,
    "title": "\"Range\" vs. \"Content-Range\"",
    "user": {
      "login": "awendt",
      "id": 11964,
      "avatar_url": "https://secure.gravatar.com/avatar/17038fd445c74e9cbbc3fa9adc174809?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "gravatar_id": "17038fd445c74e9cbbc3fa9adc174809",
      "url": "https://api.github.com/users/awendt",
      "html_url": "https://github.com/awendt",
      "followers_url": "https://api.github.com/users/awendt/followers",
      "following_url": "https://api.github.com/users/awendt/following{/other_user}",
      "gists_url": "https://api.github.com/users/awendt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awendt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awendt/subscriptions",
      "organizations_url": "https://api.github.com/users/awendt/orgs",
      "repos_url": "https://api.github.com/users/awendt/repos",
      "events_url": "https://api.github.com/users/awendt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awendt/received_events",
      "type": "User"
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/tus/tus-resumable-upload-protocol/labels/bug",
        "name": "bug",
        "color": "fc2929"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 7,
    "created_at": "2013-04-15T14:38:03Z",
    "updated_at": "2013-05-22T20:36:16Z",
    "closed_at": null,
    "pull_request": {
      "html_url": null,
      "diff_url": null,
      "patch_url": null
    },
    "body": "\"Range\" is a **request** header for GET requests in [section 14.35](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35) of the HTTP/1.1 spec:\r\n\r\n> HTTP retrieval requests using conditional or unconditional GET methods\r\n> MAY request one or more sub-ranges of the entity\r\n\r\nOn the other hand, \"Content-Range\" in [section 14.16](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16) of the spec is a **response** header field:\r\n\r\n> The Content-Range entity-header is sent with a partial entity-body to specify\r\n> where in the full entity-body the partial body should be applied\r\n\r\nWhy do you use \"Range\" for the response and \"Content-Range\" for the request?"
  }
]
